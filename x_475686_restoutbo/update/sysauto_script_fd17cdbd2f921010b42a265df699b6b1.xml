<?xml version="1.0" encoding="UTF-8"?><record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <business_calendar/>
        <condition/>
        <conditional>false</conditional>
        <entered_time>1970-01-01 00:00:00</entered_time>
        <name>GetCountryDataAPI</name>
        <run_as display_value="Priya Parwani">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period/>
        <run_start>2020-07-29 19:10:51</run_start>
        <run_time>1970-01-01 08:00:00</run_time>
        <run_type>on_demand</run_type>
        <script><![CDATA[GetCountryData();
function GetCountryData() {
    try {
        var r = new sn_ws.RESTMessageV2('x_475686_restoutbo.GetCountryData', 'CountryMethod');
        var countrykey = gs.getProperty('x_475686_restoutbo.country_key');
        r.setStringParameterNoEscape('country_key', countrykey);
		gs.info("Country key " + countrykey);
        var response = r.execute();
        var responseBody = response.getBody();
		//gs.info("Response "+responseBody);
        var httpStatus = response.getStatusCode();
		this.ParseCountryData(responseBody);
    } catch (ex) {
        var message = ex.message;
    }
}

function ParseCountryData(r){
	gs.info("parsing...");
	var gr = new GlideRecord('x_475686_restoutbo_countries');
	gr.query();
	while(gr.next()){
		gr.deleteRecord();
	}
	var response = JSON.parse(r);
	current.name = response[0].name;
	gs.info("current : " + current.name);
	gs.info(response[0].name);
	for(var i=0; i <response.length; i++){
		var country = response[i];
		//gs.info("Country :"+response[i].name);
		var countryObj = new GlideRecord('x_475686_restoutbo_countries');
		countryObj.initialize();
		countryObj.setValue('name',response[i].name);
		countryObj.region = country.region;
		countryObj.population = country.population;
		countryObj.area = country.area;
		countryObj.capital = country.capital;
		countryObj.insert();
	}
}]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-07-29 19:19:11</sys_created_on>
        <sys_id>fd17cdbd2f921010b42a265df699b6b1</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>GetCountryDataAPI</sys_name>
        <sys_package display_value="RestOutbound demo" source="x_475686_restoutbo">9ab2c5712f921010b42a265df699b6ae</sys_package>
        <sys_policy/>
        <sys_scope display_value="RestOutbound demo">9ab2c5712f921010b42a265df699b6ae</sys_scope>
        <sys_update_name>sysauto_script_fd17cdbd2f921010b42a265df699b6b1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-07-30 09:12:48</sys_updated_on>
        <time_zone/>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
